/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./scripts/blocks/answer.ts":
/*!**********************************!*\
  !*** ./scripts/blocks/answer.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ChoiceAnswer = exports.StringAnswer = void 0;\nvar image_upload_1 = __webpack_require__(/*! ../htmlElements/image_upload */ \"./scripts/htmlElements/image_upload.ts\");\nvar count = 0;\nvar StringAnswer = /** @class */ (function () {\n    function StringAnswer(answerType) {\n        this.answerType = answerType;\n        this.element = this.getBlock();\n    }\n    StringAnswer.prototype.getBlock = function () {\n        var answerBlock = document.createElement(\"div\");\n        var inputField = document.createElement(\"input\");\n        answerBlock.classList.add(\"string-answer\");\n        inputField.value = \"Answer Field\";\n        inputField.setAttribute(\"disabled\", \"true\");\n        answerBlock.appendChild(inputField);\n        return answerBlock;\n    };\n    return StringAnswer;\n}());\nexports.StringAnswer = StringAnswer;\nvar ChoiceAnswer = /** @class */ (function () {\n    function ChoiceAnswer(answerType) {\n        this.answerType = answerType;\n        this.optionElementList = {};\n        this.element = this.getBlock();\n        this.addOption();\n        this.addEventListeners();\n    }\n    ChoiceAnswer.prototype.getBlock = function () {\n        var answerBlock = document.createElement(\"div\");\n        answerBlock.classList.add(\"answer\");\n        return answerBlock;\n    };\n    ChoiceAnswer.prototype.addOption = function () {\n        var option = this.getOption();\n        option.element.id = count + \"\";\n        count++;\n        this.optionElementList[count - 1] = option;\n        this.element.appendChild(option.element);\n    };\n    ChoiceAnswer.prototype.getOption = function () {\n        return new Option(this.answerType);\n    };\n    ChoiceAnswer.prototype.addEventListeners = function () {\n        var _this = this;\n        this.element.addEventListener(\"click\", function (event) {\n            var element = event.target;\n            if (element.tagName === \"SPAN\") {\n                if (element.innerText === \"image\") {\n                    image_upload_1.getImageSource().then(function (e) {\n                        var option = _this.optionElementList[Number(element.parentNode.parentNode.parentNode.id)];\n                        option.addImageElement(e);\n                    });\n                    image_upload_1.uploadImageButton.click();\n                }\n                if (element.innerText == \"add\") {\n                    _this.addOption();\n                }\n                if (element.innerText == \"clear\") {\n                    var option = _this.optionElementList[Number(element.parentNode.parentNode.parentNode.id)];\n                    if (Object.keys(_this.optionElementList).length > 1) {\n                        option.remove();\n                        delete _this.optionElementList[Number(element.parentNode.parentNode.parentNode.id)];\n                    }\n                }\n            }\n        });\n    };\n    return ChoiceAnswer;\n}());\nexports.ChoiceAnswer = ChoiceAnswer;\nvar Option = /** @class */ (function () {\n    function Option(type) {\n        this.optionType = type;\n        this.optionImage = this.getOptionImage();\n        this.inputElement = this.getInputElement();\n        this.addImage = this.getImageButton();\n        this.addOption = this.getAddOptionElement();\n        this.deleteOption = this.getDeleteOptionButton();\n        this.element = this.getBlock();\n    }\n    Option.prototype.getImageButton = function () {\n        var buttonElement = document.createElement(\"button\");\n        buttonElement.classList.add(\"image-delete\");\n        var addImageSpan = document.createElement(\"span\");\n        addImageSpan.classList.add(\"material-icons\");\n        addImageSpan.innerText = \"image\";\n        buttonElement.appendChild(addImageSpan);\n        return buttonElement;\n    };\n    Option.prototype.getDeleteOptionButton = function () {\n        var buttonElement = document.createElement(\"button\");\n        buttonElement.classList.add(\"image-delete\");\n        var deleteOptionSpan = document.createElement(\"span\");\n        deleteOptionSpan.classList.add(\"material-icons\");\n        deleteOptionSpan.innerText = \"clear\";\n        buttonElement.appendChild(deleteOptionSpan);\n        return buttonElement;\n    };\n    Option.prototype.getAddOptionElement = function () {\n        var buttonElement = document.createElement(\"button\");\n        buttonElement.classList.add(\"image-delete\");\n        var deleteOptionSpan = document.createElement(\"span\");\n        deleteOptionSpan.classList.add(\"material-icons\");\n        deleteOptionSpan.innerText = \"add\";\n        buttonElement.appendChild(deleteOptionSpan);\n        return buttonElement;\n    };\n    Option.prototype.getInputElement = function () {\n        var inputField = document.createElement(\"input\");\n        inputField.placeholder = \"Option Value\";\n        return inputField;\n    };\n    Option.prototype.getBlock = function () {\n        var option = document.createElement(\"div\");\n        option.classList.add(\"option-image\");\n        var optionDiv = document.createElement(\"div\");\n        optionDiv.classList.add(\"option-element\");\n        optionDiv.appendChild(this.optionImage);\n        optionDiv.appendChild(this.inputElement);\n        optionDiv.appendChild(this.addImage);\n        optionDiv.appendChild(this.addOption);\n        optionDiv.appendChild(this.deleteOption);\n        option.appendChild(optionDiv);\n        return option;\n    };\n    Option.prototype.getOptionImage = function () {\n        var optionSpanElement = document.createElement(\"span\");\n        optionSpanElement.classList.add(\"material-icons\");\n        if (this.optionType == \"Multiple Option\") {\n            optionSpanElement.innerHTML = \"radio_button_unchecked\";\n        }\n        else {\n            optionSpanElement.innerHTML = \"check_box_outline_blank\";\n        }\n        return optionSpanElement;\n    };\n    Option.prototype.addImageElement = function (src) {\n        if (this.element.querySelector(\"img\") != null) {\n            this.element.children[1].src = src;\n        }\n        else {\n            var imageElement = document.createElement(\"img\");\n            imageElement.src = src;\n            this.element.appendChild(imageElement);\n        }\n    };\n    Option.prototype.remove = function () {\n        this.element.remove();\n    };\n    return Option;\n}());\n\n\n//# sourceURL=webpack://google-form/./scripts/blocks/answer.ts?");

/***/ }),

/***/ "./scripts/blocks/block.ts":
/*!*********************************!*\
  !*** ./scripts/blocks/block.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.block = void 0;\nvar question_block_1 = __webpack_require__(/*! ./question_block */ \"./scripts/blocks/question_block.ts\");\nvar imageVideo_1 = __webpack_require__(/*! ./imageVideo */ \"./scripts/blocks/imageVideo.ts\");\nvar title_description_block_1 = __webpack_require__(/*! ./title_description_block */ \"./scripts/blocks/title_description_block.ts\");\nvar constants = __webpack_require__(/*! ../conf */ \"./scripts/conf.ts\");\nvar blockList = {\n    questionBlock: question_block_1.question,\n    imageVideoBlock: imageVideo_1.imageBlock,\n    titleDescriptionBlock: title_description_block_1.titleDescription,\n};\nvar block = /** @class */ (function () {\n    function block(type, parentElement) {\n        this.block = new blockList[type]();\n        this.parentElement = parentElement;\n        this.type = type;\n    }\n    block.prototype.renderBlock = function () {\n        this.childElement = this.block.getBlock();\n        this.parentElement.appendChild(this.childElement);\n        this.changeButtonBackground(constants.currentBlockOperationButtonColor);\n    };\n    block.prototype.getNameOfBlock = function () {\n        return this.block.name;\n    };\n    block.prototype.remove = function () {\n        this.changeButtonBackground(constants.defaultOperationBlockBackgroundColor);\n        this.parentElement.removeChild(this.childElement);\n    };\n    block.prototype.changeButtonBackground = function (color) {\n        var button = document.querySelector(\"#\" + this.getNameOfBlock());\n        button.style.backgroundColor = color;\n    };\n    return block;\n}());\nexports.block = block;\n\n\n//# sourceURL=webpack://google-form/./scripts/blocks/block.ts?");

/***/ }),

/***/ "./scripts/blocks/imageVideo.ts":
/*!**************************************!*\
  !*** ./scripts/blocks/imageVideo.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.imageBlock = void 0;\nvar title_description_block_1 = __webpack_require__(/*! ./title_description_block */ \"./scripts/blocks/title_description_block.ts\");\nvar image_upload_1 = __webpack_require__(/*! ../htmlElements/image_upload */ \"./scripts/htmlElements/image_upload.ts\");\nvar imageBlock = /** @class */ (function () {\n    function imageBlock() {\n        this.name = \"image-block\";\n        this.imageElement = document.createElement(\"img\");\n        this.imageElement.classList.add(\"image-element\");\n        this.titleAndDescription = new title_description_block_1.titleDescription();\n        this.caption = this.getCaption();\n    }\n    imageBlock.prototype.getBlock = function () {\n        var insideBlock = document.createElement(\"div\");\n        insideBlock.classList.add(\"inside-block\");\n        var tempDiv = document.createElement(\"div\");\n        var uploadButton = this.getUploadButton();\n        uploadButton.click();\n        tempDiv.appendChild(uploadButton);\n        tempDiv.appendChild(this.imageElement);\n        tempDiv.appendChild(this.caption);\n        // tempDiv.classList.add(\"image-and-button\");\n        insideBlock.appendChild(this.titleAndDescription.title);\n        insideBlock.appendChild(this.titleAndDescription.description);\n        insideBlock.appendChild(tempDiv);\n        insideBlock.appendChild(this.caption);\n        return insideBlock;\n    };\n    imageBlock.prototype.getUploadButton = function () {\n        var _this = this;\n        var uploadButton = document.createElement(\"button\");\n        var spanElement = document.createElement(\"span\");\n        spanElement.classList.add(\"material-icons\");\n        spanElement.innerText = \"upload_file\";\n        uploadButton.appendChild(spanElement);\n        uploadButton.classList.add(\"image-button\");\n        uploadButton.addEventListener(\"click\", function () {\n            image_upload_1.uploadImageButton.click();\n            image_upload_1.getImageSource().then(function (e) {\n                _this.imageElement.src = e;\n            });\n        });\n        return uploadButton;\n    };\n    imageBlock.prototype.getCaption = function () {\n        var inputElement = document.createElement(\"input\");\n        inputElement.placeholder = \"Caption Goes Here\";\n        inputElement.classList.add(\"caption\");\n        return inputElement;\n    };\n    return imageBlock;\n}());\nexports.imageBlock = imageBlock;\n\n\n//# sourceURL=webpack://google-form/./scripts/blocks/imageVideo.ts?");

/***/ }),

/***/ "./scripts/blocks/question_block.ts":
/*!******************************************!*\
  !*** ./scripts/blocks/question_block.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.question = void 0;\nvar drop_down_1 = __webpack_require__(/*! ../htmlElements/drop_down */ \"./scripts/htmlElements/drop_down.ts\");\nvar constants = __webpack_require__(/*! ../conf */ \"./scripts/conf.ts\");\nvar answer_1 = __webpack_require__(/*! ./answer */ \"./scripts/blocks/answer.ts\");\nvar question = /** @class */ (function () {\n    function question() {\n        this.name = \"question-block\";\n        this.list = this.getSpanElementList(constants.answerList, constants.iconList);\n        this.dropdown = new drop_down_1.dropDown(this.list);\n        this.question = this.getQuestionBlock();\n        this.required = this.getRequiredNoteElement();\n        this.answer = this.getAnswer(\"choice\", \"Multiple Option\");\n        this.answerType = \"Multiple Option\";\n        this.addChangeDropDown();\n    }\n    question.prototype.getAnswer = function (type, answerType) {\n        if (type === \"string\") {\n            return new answer_1.StringAnswer(answerType);\n        }\n        else {\n            return new answer_1.ChoiceAnswer(answerType);\n        }\n    };\n    question.prototype.getBlock = function () {\n        var insideBlock = document.createElement(\"div\");\n        insideBlock.classList.add(\"inside-block\");\n        insideBlock.appendChild(this.question);\n        insideBlock.appendChild(this.answer.element);\n        insideBlock.appendChild(this.required);\n        this.element = insideBlock;\n        return insideBlock;\n    };\n    question.prototype.getQuestionBlock = function () {\n        var inputField = document.createElement(\"input\");\n        inputField.classList.add(\"question\");\n        inputField.placeholder = \"Your Question Goes Here\";\n        var qBlock = document.createElement(\"div\");\n        qBlock.appendChild(inputField);\n        qBlock.appendChild(this.dropdown.element);\n        qBlock.classList.add(\"q-block\");\n        return qBlock;\n    };\n    question.prototype.getRequiredNoteElement = function () {\n        var block = document.createElement(\"div\");\n        block.classList.add(\"required-note\");\n        var spanElement = document.createElement(\"span\");\n        var inputElement = document.createElement(\"input\");\n        spanElement.innerText = \"Note: \";\n        inputElement.classList.add(\"note\");\n        inputElement.placeholder = \"Your Note Goes Here (Optional)\";\n        var toggleButton = document.createElement(\"label\");\n        var inputCheckbox = document.createElement(\"input\");\n        inputCheckbox.setAttribute(\"type\", \"checkbox\");\n        inputCheckbox.classList.add(\"check-box\");\n        var checkBox = document.createElement(\"span\");\n        var requireSpan = document.createElement(\"span\");\n        requireSpan.innerText = \"Required\";\n        toggleButton.classList.add(\"switch\");\n        inputElement.classList.add(\"checkbox\");\n        inputElement.id = \"required\";\n        checkBox.classList.add(\"slider\");\n        checkBox.classList.add(\"round\");\n        toggleButton.appendChild(inputCheckbox);\n        toggleButton.appendChild(checkBox);\n        block.appendChild(spanElement);\n        block.appendChild(inputElement);\n        block.appendChild(requireSpan);\n        block.appendChild(toggleButton);\n        return block;\n    };\n    question.prototype.getSpanElementList = function (list, iconList) {\n        var newList = constants.answerList.map(function (val, idx) {\n            var spanElement = document.createElement(\"span\");\n            var spanIcon = document.createElement(\"span\");\n            var spanText = document.createElement(\"span\");\n            spanIcon.classList.add(\"material-icons\");\n            spanIcon.classList.add(\"option\");\n            spanIcon.innerText = iconList[idx];\n            spanText.innerText = val;\n            spanText.classList.add(\"inner-text\");\n            spanElement.appendChild(spanIcon);\n            spanElement.appendChild(spanText);\n            return spanElement;\n        });\n        return newList;\n    };\n    question.prototype.changeAnswer = function (newAnswerType) {\n        var temp = this.answer.element;\n        this.answerType = newAnswerType;\n        if (this.answerType == \"Multiple Option\" ||\n            this.answerType == \"Check Boxes\") {\n            this.answer = this.getAnswer(\"choice\", this.answerType);\n        }\n        else {\n            this.answer = this.getAnswer(\"string\", this.answerType);\n        }\n        this.element.replaceChild(this.answer.element, temp);\n    };\n    question.prototype.addChangeDropDown = function () {\n        var _this = this;\n        this.dropdown.element.addEventListener(\"focusout\", function (event) {\n            var temp = _this.dropdown.element.querySelector(\"#select-option\");\n            if (temp.childNodes[0].childNodes[1].innerText ===\n                _this.answerType)\n                return;\n            _this.changeAnswer(temp.childNodes[0].childNodes[1]\n                .innerText);\n        });\n    };\n    return question;\n}());\nexports.question = question;\n\n\n//# sourceURL=webpack://google-form/./scripts/blocks/question_block.ts?");

/***/ }),

/***/ "./scripts/blocks/title_description_block.ts":
/*!***************************************************!*\
  !*** ./scripts/blocks/title_description_block.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.titleDescription = void 0;\nvar titleDescription = /** @class */ (function () {\n    function titleDescription() {\n        this.name = \"title-description-block\";\n        this.title = this.getFormTitleBlock();\n        this.description = this.getDescription();\n        this.addEventListeners();\n    }\n    titleDescription.prototype.getBlock = function () {\n        var insideBlock = document.createElement(\"div\");\n        insideBlock.classList.add(\"inside-block\");\n        insideBlock.appendChild(this.title);\n        insideBlock.appendChild(this.description);\n        return insideBlock;\n    };\n    titleDescription.prototype.getFormTitleBlock = function () {\n        var formTitleBlock = document.createElement(\"div\");\n        var inputFormTitle = document.createElement(\"input\");\n        var descriptionButton = document.createElement(\"button\");\n        var spanElement = document.createElement(\"span\");\n        descriptionButton.classList.add(\"description-button\");\n        inputFormTitle.classList.add(\"input-title\");\n        inputFormTitle.value = \"Untitled Title\";\n        formTitleBlock.classList.add(\"form-title-block\");\n        formTitleBlock.appendChild(inputFormTitle);\n        formTitleBlock.appendChild(descriptionButton);\n        descriptionButton.appendChild(spanElement);\n        spanElement.innerText = \"expand_more\";\n        spanElement.classList.add(\"material-icons\");\n        return formTitleBlock;\n    };\n    titleDescription.prototype.getDescription = function () {\n        var descriptionInputField = document.createElement(\"input\");\n        descriptionInputField.placeholder = \"Description(Optional)\";\n        descriptionInputField.classList.add(\"description\");\n        return descriptionInputField;\n    };\n    titleDescription.prototype.addEventListeners = function () {\n        var _this = this;\n        console.log(\"dfsf\");\n        this.title.querySelector(\"button\").addEventListener(\"click\", function (e) {\n            if (_this.description.classList.contains(\"hide-description\")) {\n                _this.description.classList.remove(\"hide-description\");\n                _this.description.style.animation = \"growDown 300ms linear forwards\";\n            }\n            else {\n                _this.description.classList.add(\"hide-description\");\n            }\n        });\n    };\n    return titleDescription;\n}());\nexports.titleDescription = titleDescription;\n\n\n//# sourceURL=webpack://google-form/./scripts/blocks/title_description_block.ts?");

/***/ }),

/***/ "./scripts/conf.ts":
/*!*************************!*\
  !*** ./scripts/conf.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.iconList = exports.answerList = exports.hoverButtonColor = exports.defaultOperationBlockBackgroundColor = exports.currentBlockOperationButtonColor = void 0;\nexports.currentBlockOperationButtonColor = \"#97b9ee\";\nexports.defaultOperationBlockBackgroundColor = \"transparent\";\nexports.hoverButtonColor = \"#c7c5c8\";\nexports.answerList = [\n    \"Multiple Option\",\n    \"Check Boxes\",\n    \"Paragraph\",\n    \"Phone Number\",\n    \"Number\",\n    \"Date\",\n    \"Time\",\n    \"Email\",\n];\nexports.iconList = [\n    \"radio_button_checked\",\n    \"check_box\",\n    \"view_headline\",\n    \"phone\",\n    \"pin\",\n    \"calendar_today\",\n    \"schedule\",\n    \"email\",\n];\n//async on image Block\n//async on upload button\n\n\n//# sourceURL=webpack://google-form/./scripts/conf.ts?");

/***/ }),

/***/ "./scripts/controller.ts":
/*!*******************************!*\
  !*** ./scripts/controller.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Controller = void 0;\nvar block_1 = __webpack_require__(/*! ./blocks/block */ \"./scripts/blocks/block.ts\");\nvar constants = __webpack_require__(/*! ./conf */ \"./scripts/conf.ts\");\nvar Controller = /** @class */ (function () {\n    function Controller(parentElement) {\n        this.parentElement = parentElement;\n        this.currentBlock = new block_1.block(\"titleDescriptionBlock\", parentElement);\n        this.currentButtonBackground = \"\";\n        this.startRendering();\n        this.addEventListeners();\n    }\n    Controller.prototype.startRendering = function () {\n        this.currentBlock.renderBlock();\n    };\n    Controller.prototype.addEventListeners = function () {\n        this.addHeaderEventListeners();\n        this.addEventListenersOperationBlock();\n    };\n    Controller.prototype.addEventListenersOperationBlock = function () {\n        var _this = this;\n        var operationButton = function () {\n            var operationBlock = document.querySelector(\"#operation-block\");\n            operationBlock.addEventListener(\"click\", function (e) {\n                if (e.target.tagName != \"SPAN\" ||\n                    e.target.id === _this.currentBlock.getNameOfBlock()) {\n                    return;\n                }\n                var getOperation = e.target\n                    .id;\n                if (getOperation === \"add-question\") {\n                }\n                else if (getOperation === \"delete-block\") {\n                }\n                else {\n                    _this.currentBlock.remove();\n                    _this.currentBlock = _this.getBlock(getOperation);\n                    _this.currentBlock.renderBlock();\n                    _this.currentButtonBackground =\n                        constants.currentBlockOperationButtonColor;\n                }\n            });\n        };\n        this.addHoverEventListeners();\n        operationButton();\n    };\n    Controller.prototype.addHeaderEventListeners = function () {\n        var inputTag = document.querySelector(\"#form-name\");\n        inputTag.addEventListener(\"focusout\", function (e) {\n            //   const title: string = (e.target as HTMLInputElement).value;\n            var title = e.target.value;\n            document.title = title || \"Untitled Form\";\n            e.target.value = title || \"Untitled Form\";\n        });\n    };\n    Controller.prototype.addHoverEventListeners = function () {\n        var _this = this;\n        var operationBlock = document.querySelector(\"#operation-block\");\n        var hoverBlock = document.querySelector(\"#hover-block\");\n        operationBlock.addEventListener(\"mouseover\", function (e) {\n            if (e.target.tagName != \"SPAN\") {\n                return;\n            }\n            _this.currentButtonBackground = (e.target).style.backgroundColor;\n            e.target.style.backgroundColor =\n                constants.hoverButtonColor;\n            var targetId = e.target.id;\n            var hoveredOp = document.querySelector(\"[data-value = \" + targetId + \"]\");\n            // console.log(hoverBlock, hoveredOp, targetId);\n            hoveredOp.style.visibility = \"visible\";\n        });\n        operationBlock.addEventListener(\"mouseout\", function (e) {\n            if (e.target.tagName != \"SPAN\") {\n                // console.log(\"not span\");\n                return;\n            }\n            var targetId = e.target.id;\n            var hoveredOp = document.querySelector(\"[data-value = \" + targetId + \"]\");\n            // console.log(hoverBlock, hoveredOp, targetId);\n            hoveredOp.style.visibility = \"hidden\";\n            e.target.style.backgroundColor =\n                _this.currentButtonBackground;\n        });\n    };\n    Controller.prototype.getBlock = function (name) {\n        var blockName;\n        if (name == \"image-block\") {\n            blockName = \"imageVideoBlock\";\n        }\n        else if (name == \"title-description-block\") {\n            blockName = \"titleDescriptionBlock\";\n        }\n        else {\n            blockName = \"questionBlock\";\n        }\n        return new block_1.block(blockName, this.parentElement);\n    };\n    return Controller;\n}());\nexports.Controller = Controller;\n\n\n//# sourceURL=webpack://google-form/./scripts/controller.ts?");

/***/ }),

/***/ "./scripts/htmlElements/drop_down.ts":
/*!*******************************************!*\
  !*** ./scripts/htmlElements/drop_down.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.dropDown = void 0;\nvar dropDown = /** @class */ (function () {\n    function dropDown(list) {\n        this.optionList = list;\n        this.element = this.getBlock();\n        this.addEventListener();\n    }\n    dropDown.prototype.getBlock = function () {\n        var divElement = document.createElement(\"div\");\n        divElement.classList.add(\"custom-select-wrapper\");\n        var divCustom = document.createElement(\"div\");\n        divCustom.classList.add(\"custom-select\");\n        var divTrigger = document.createElement(\"div\");\n        divTrigger.classList.add(\"custom-select__Trigger\");\n        divTrigger.id = \"select-option\";\n        // let arrow: HTMLElement = document.createElement(\"div\");\n        // arrow.classList.add(\"arrow\");\n        var customOptions = document.createElement(\"div\");\n        customOptions.classList.add(\"custom-options\");\n        customOptions.setAttribute(\"tabIndex\", \"0\");\n        customOptions.id = \"select-options\";\n        this.optionList.forEach(function (val) {\n            val.classList.add(\"custom-option\");\n            customOptions.appendChild(val);\n        });\n        customOptions.appendChild(this.optionList[0].cloneNode(true));\n        // divTrigger.appendChild(arrow);\n        divTrigger.appendChild(this.optionList[0]);\n        divCustom.appendChild(divTrigger);\n        divCustom.appendChild(customOptions);\n        divElement.appendChild(divCustom);\n        return divElement;\n    };\n    dropDown.prototype.addEventListener = function () {\n        var element = this.element.querySelector(\"#select-options\");\n        var dropElement = this.element.querySelector(\"#select-option\");\n        dropElement.addEventListener(\"click\", function (e) {\n            dropElement.style.visibility = \"hidden\";\n            element.style.visibility = \"visible\";\n            element.classList.add(\"dropdown\");\n            element.focus();\n        });\n        element.addEventListener(\"click\", function (e) {\n            if (e.target.tagName !== \"SPAN\")\n                return;\n            if (e.target.classList.contains(\"custom-option\")) {\n                dropElement.replaceChild(e.target.cloneNode(true), dropElement.firstChild);\n            }\n            else {\n                dropElement.replaceChild(e.target.parentNode.cloneNode(true), dropElement.firstChild);\n            }\n            element.style.visibility = \"hidden\";\n            dropElement.style.visibility = \"visible\";\n        });\n        element.addEventListener(\"focusout\", function () {\n            element.style.visibility = \"hidden\";\n            dropElement.style.visibility = \"visible\";\n            element.classList.remove(\"dropdown\");\n        });\n    };\n    return dropDown;\n}());\nexports.dropDown = dropDown;\n\n\n//# sourceURL=webpack://google-form/./scripts/htmlElements/drop_down.ts?");

/***/ }),

/***/ "./scripts/htmlElements/image_upload.ts":
/*!**********************************************!*\
  !*** ./scripts/htmlElements/image_upload.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getImageSource = exports.uploadImageButton = void 0;\nexports.uploadImageButton = document.createElement(\"input\");\nexports.uploadImageButton.setAttribute(\"type\", \"file\");\nexports.uploadImageButton.setAttribute(\"accept\", \"image/*\");\nexports.uploadImageButton.classList.add(\"hide\");\nfunction getImageSource() {\n    return new Promise(function (resolve, reject) {\n        exports.uploadImageButton.addEventListener(\"change\", function (e) {\n            resolve(URL.createObjectURL(e.target.files[0]));\n        });\n    });\n}\nexports.getImageSource = getImageSource;\n//React Phases and Lifecycle methods\n//Legacy api\n//Synthetic events\n//collapse\n\n\n//# sourceURL=webpack://google-form/./scripts/htmlElements/image_upload.ts?");

/***/ }),

/***/ "./scripts/index.ts":
/*!**************************!*\
  !*** ./scripts/index.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar controller_1 = __webpack_require__(/*! ./controller */ \"./scripts/controller.ts\");\nvar element = document.querySelector(\"#main-block\");\nvar ctrl = new controller_1.Controller(element);\n\n\n//# sourceURL=webpack://google-form/./scripts/index.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./scripts/index.ts");
/******/ 	
/******/ })()
;